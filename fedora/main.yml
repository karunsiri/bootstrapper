---
- name: Provision Fedora dev machine
  hosts: localhost
  become: true
  vars_files:
    - ../vars.yml
  vars:
    nofile_limit: 39693561

  tasks:

    - name: Set soft `nofile` limits for '*'
      community.general.pam_limits:
        domain: '*'
        limit_type: soft
        limit_item: nofile
        value: "{{ nofile_limit }}"

    - name: Set hard `nofile` limits for '*'
      community.general.pam_limits:
        domain: '*'
        limit_type: hard
        limit_item: nofile
        value: "{{ nofile_limit }}"

    - name: Ensure pam_limits is enabled
      ansible.builtin.lineinfile:
        line: session required pam_limits.so
        path: /etc/pam.d/login

    - name: Set DefaultLimitNOFILE to GUI session
      ansible.builtin.lineinfile:
        line: DefaultLimitNOFILE=524288:{{ nofile_limit }}
        path: "{{ item }}"
      loop:
        - /etc/systemd/user.conf
        - /etc/systemd/system.conf

    - name: Set Sysctl fs.file-max to unlimited
      ansible.builtin.lineinfile:
        line: fs.file-max = 2097152
        path: /etc/sysctl.conf

    - name: Load sysctl config
      ansible.builtin.command:
        cmd: sysctl -p
      changed_when: false

    - name: Add openvpn3 repo
      ansible.builtin.yum_repository:
        name: copr:copr.fedorainfracloud.org:dsommers:openvpn3
        description: OpenVPN3 repo by dsommers
        baseurl: https://download.copr.fedorainfracloud.org/results/dsommers/openvpn3/fedora-$releasever-$basearch/
        gpgkey: https://download.copr.fedorainfracloud.org/results/dsommers/openvpn3/pubkey.gpg

    - name: Add docker-ce repo
      ansible.builtin.yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable
        baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
        gpgkey: https://download.docker.com/linux/fedora/gpg

    - name: Update DNF cache
      ansible.builtin.dnf:
        update_cache: true

    - name: Ensure C development tools
      ansible.builtin.dnf:
        name:
          - git
          - '@C Development Tools and Libraries'
        state: present

    - name: Ensure mandatory tool installed
      ansible.builtin.dnf:
        state: present
        name:
          - bat
          - fzf
          - kitty
          - neovim
          - postgresql
          - postgresql-server
          - rcm
          - redis
          - the_silver_searcher
          - tmux
          - vips
          - zsh

    - name: Check if sops is installed
      ansible.builtin.command: command -v sops
      register: sops_exe
      ignore_errors: true
      changed_when: sops_exe.rc == 1

    - name: Download sops RPM package
      when: sops_exe is failed
      ansible.builtin.get_url:
        url: https://github.com/getsops/sops/releases/download/v3.7.3/sops-3.7.3-1.x86_64.rpm
        dest: /tmp/sops.rpm
        mode: '0755'

    - name: Ensure SOPS is installed
      when: sops_exe is failed
      ansible.builtin.yum:
        name: /tmp/sops.rpm
        state: present
        disable_gpg_check: true

    - name: Ensure docker installed
      ansible.builtin.dnf:
        state: present
        name:
          - containerd.io
          - docker-buildx-plugin
          - docker-ce
          - docker-ce-cli
          - docker-compose-plugin

    - name: Ensure tt (typing test) is available. Absolutely required!
      ansible.builtin.get_url:
        url: https://github.com/lemnos/tt/releases/download/v0.4.2/tt-linux
        dest: /usr/local/bin/tt
        mode: '0755'

    - name: Uninstall useless tools
      ansible.builtin.dnf:
        state: absent
        autoremove: true
        name:
          - '@Container management'
          - cheese
          - gnome-boxes
          - gnome-maps
          - gnome-photos
          - gnome-tour
          - gnome-weather
          - mediawriter
          - rhythmbox
          - totem

    - name: Clone karunsiri/dotfiles to ~/.dotfiles
      ansible.builtin.git:
        repo: https://github.com/karunsiri/dotfiles.git
        dest: /home/karun/.dotfiles
      failed_when: false
      become: true
      become_user: "{{ username }}"

    - name: Whole System Upgrade
      ansible.builtin.dnf:
        name: '*'
        state: latest

    - name: Detect ZSH path
      ansible.builtin.command: which zsh
      register: zsh_path
      changed_when: zsh_path.rc == 1

    - name: Detect user id
      ansible.builtin.command: id -u
      register: user_id
      become: true
      become_user: "{{ username }}"
      changed_when: user_id.rc == 1

    - name: Change shell to ZSH
      ansible.builtin.lineinfile:
        path: /etc/passwd
        regexp: '^{{ username }}'
        line: "{{ username }}:x:{{ user_id.stdout }}:{{ user_id.stdout }}:{{ username }}:/home/{{ username }}:{{ zsh_path.stdout }}"

    - name: Sync dotfiles
      ansible.builtin.shell: |
        RCRC=$HOME/.dotfiles/rcrc
        rcup
      args:
        executable: "{{ zsh_path.stdout }}"
      become: true
      become_user: "{{ username }}"
      changed_when: false

    - name: Ensure user fonts directory
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
        state: directory
        mode: '0755'
      become: true
      become_user: "{{ username }}"

    - name: Check if 'FiraCode Nerd Font' exists
      ansible.builtin.shell: |
        ls {{ lookup('env', 'HOME') }}/.local/share/fonts/FiraCodeNerdFont*
      register: fc_font
      ignore_errors: true
      changed_when: fc_font.rc == 1

    - name: Download 'FiraCode Nerd Font' font if not exist
      when: fc_font is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/FiraCode.zip
        dest: "{{ lookup('env', 'HOME') }}/.local/share/fonts/"
        remote_src: true
      become: true
      become_user: "{{ username }}"

    - name: Check if 'VictorMono' exists
      ansible.builtin.shell: |
        ls {{ lookup('env', 'HOME') }}/.local/share/fonts/VictorMono
      register: victor_font
      ignore_errors: true
      changed_when: victor_font.rc == 1

    - name: Download 'VictorMono' font if not exist
      when: victor_font is failed
      ansible.builtin.unarchive:
        src: https://rubjo.github.io/victor-mono/VictorMonoAll.zip
        dest: /tmp
        include:
          - 'TTF/VictorMono-MediumOblique.ttf'
          - 'TTF/VictorMono-BoldOblique.ttf'
        remote_src: true
      become: true
      become_user: "{{ username }}"

    - name: Ensure 'VictorMono' font is installed
      when: victor_font is failed
      ansible.builtin.shell: |
        cp /tmp/TTF/* {{ lookup('env', 'HOME') }}/.local/share/fonts
      become: true
      become_user: "{{ username }}"
      changed_when: victor_font.rc == 1
