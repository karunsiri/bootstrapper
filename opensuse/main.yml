---
- name: Provision openSUSE dev machine
  hosts: localhost
  become: true
  vars_files:
    - ../vars.yml
  vars:
    nofile_limit: "1048576" # hardcoded into the Linux kernel. Value: 1024 * 1024
    ksops_version: "4.3.2"
    gotop_version: "4.2.0"

  tasks:
    - name: Ensure Packman Repository
      community.general.zypper_repository:
        name: packman
        repo: https://ftp.fau.de/packman/suse/openSUSE_Tumbleweed/
        priority: 90
        auto_import_keys: true

    - name: Ensure libdvdcss Repository
      community.general.zypper_repository:
        name: libdvdcss repository
        repo: http://opensuse-guide.org/repo/openSUSE_Tumbleweed/
        auto_import_keys: true

    - name: Ensure server:database Repository
      community.general.zypper_repository:
        repo: https://download.opensuse.org/repositories/server:database/openSUSE_Tumbleweed/server:database.repo
        state: present

    - name: Ensure Google public signing key
      ansible.builtin.rpm_key:
        key: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Ensure PostgreSQL Repository
      community.general.zypper_repository:
        name: PostgreSQL
        repo: http://download.opensuse.org/repositories/server:database:postgresql/openSUSE_Tumbleweed/
        auto_import_keys: true

    - name: Refresh all repos
      community.general.zypper_repository:
        repo: '*'
        runrefresh: true

    # - name: System update
    #   community.general.zypper:
    #     name: '*'
    #     update_cache: true
    #     disable_recommends: false
    #     state: latest

    - name: Ensure ZSH
      community.general.zypper:
        name:
          - zsh
        disable_recommends: false
        state: present

    - name: Ensure essential tools
      community.general.zypper:
        name:
          - bat
          # - colord
          # - colord-color-profiles
          # - colord-kde
          - dkms
          - flatpak
          - fzf
          - git
          - google-noto-sans-jp-fonts-full
          - google-noto-sans-kr-fonts-full
          - google-noto-sans-sc-fonts-full
          - google-noto-sans-tc-fonts-full
          - google-noto-serif-jp-fonts-full
          - google-noto-serif-kr-fonts-full
          - google-noto-serif-sc-fonts-full
          - google-noto-serif-tc-fonts-full
          - htop
          - kernel-devel
          - kitty
          - libgcrypt-devel
          - libvips-devel
          - libxslt-devel
          - libyaml-devel
          - neofetch
          - neovim
          - opi
          - patterns-devel-base-devel_basis
          - patterns-devel-base-devel_kernel
          - postgresql
          - postgresql-contrib
          - postgresql-devel
          - postgresql-server
          - rcm
          # - redis
          - ruby-devel
          - sops
          - sqlite3-devel
          - thai-fonts
          - the_silver_searcher
          - tmux
          - v4l2loopback-kmp-default
          - valkey
          - vips-tools
        disable_recommends: false
        state: present

    - name: Ensure gotop is install
      ansible.builtin.unarchive:
        src: https://github.com/xxxserxxx/gotop/releases/download/v{{ gotop_version }}/gotop_v{{ gotop_version }}_linux_amd64.tgz
        dest: "{{ lookup('env', 'HOME') }}/.local/bin"
        remote_src: true
        mode: '0755'
      become: true
      become_user: "{{ username }}"

    - name: Ensure kustomize ksops directory
      ansible.builtin.file:
        path: "{{ lookup('env', 'XDG_CONFIG_HOME') }}/kustomize/plugin/verumex.com/v1/ksops"
        state: directory
        mode: '0755'
      become: true
      become_user: "{{ username }}"
      register: ksops_dir

    - name: Ensure ksops is installed
      ansible.builtin.unarchive:
        src: https://github.com/viaduct-ai/kustomize-sops/releases/download/v{{ ksops_version }}/ksops_{{ ksops_version }}_Linux_x86_64.tar.gz
        dest: "{{ ksops_dir.path }}"
        remote_src: true
        mode: '0755'
      become: true
      become_user: "{{ username }}"

    # Doesn't support Plasma 6.1
    # - name: Ensure aesthetic packages
    #   community.general.zypper:
    #     name:
    #       - latte-dock
    #     disable_recommends: false
    #     state: present

    - name: Ensure docker
      community.general.zypper:
        name:
          - docker
          - docker-compose
          - docker-compose-switch
        disable_recommends: false

    - name: Ensure user is in docker group
      ansible.builtin.user:
        name: "{{ username }}"
        append: true
        groups:
          - docker

    # - name: Ensure redis.conf
    #   ansible.builtin.shell: |
    #     cp /etc/redis/default.conf.example /etc/redis/redis.conf
    #     chown redis:redis /etc/redis/redis.conf
    #   args:
    #     creates: /etc/redis/redis.conf
    #
    # - name: Ensure redis.service
    #   ansible.builtin.copy:
    #     src: ./files/redis.service
    #     dest: /etc/systemd/system/redis.service
    #     mode: '0755'

    - name: Ensure tt (typing test) is available. Absolutely necessary!
      ansible.builtin.get_url:
        url: https://github.com/lemnos/tt/releases/download/v0.4.2/tt-linux
        dest: /usr/local/bin/tt
        mode: '0755'

    # A KDE settings importer/exporter
    - name: Ensure Konsave
      ansible.builtin.pip:
        name: konsave
      become: true
      become_user: "{{ username }}"

    - name: Check if ~/.dotfiles exists
      ansible.builtin.stat:
        path: ~/.dotfiles/rcrc
      register: dotfiles
      become: true
      become_user: "{{ username }}"

    - name: Clone karunsiri/dotfiles to ~/.dotfiles
      when: not dotfiles.stat.exists
      ansible.builtin.git:
        repo: https://github.com/karunsiri/dotfiles.git
        dest: /home/karun/.dotfiles
      become: true
      become_user: "{{ username }}"

    - name: Detect ZSH path
      ansible.builtin.command: which zsh
      register: zsh_path
      changed_when: zsh_path.rc == 1

    - name: Detect user id
      ansible.builtin.command: id -u
      register: user_id
      become: true
      become_user: "{{ username }}"
      changed_when: user_id.rc == 1

    - name: Change shell to ZSH
      ansible.builtin.lineinfile:
        path: /etc/passwd
        regexp: '^{{ username }}'
        line: "{{ username }}:x:{{ user_id.stdout }}:{{ user_id.stdout }}:{{ username }}:/home/{{ username }}:{{ zsh_path.stdout }}"

    - name: Sync dotfiles
      ansible.builtin.shell: |
        RCRC=$HOME/.dotfiles/rcrc
        rcup
      args:
        executable: "{{ zsh_path.stdout }}"
      become: true
      become_user: "{{ username }}"
      changed_when: false

    - name: Ensure user fonts directory
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
        state: directory
        mode: '0755'
      become: true
      become_user: "{{ username }}"

    - name: Check if 'FiraCode Nerd Font' exists
      ansible.builtin.shell: |
        ls {{ lookup('env', 'HOME') }}/.local/share/fonts/FiraCodeNerdFont*
      register: fc_font
      ignore_errors: true
      changed_when: fc_font.rc == 1

    - name: Download 'FiraCode Nerd Font' font if not exist
      when: fc_font is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/FiraCode.zip
        dest: "{{ lookup('env', 'HOME') }}/.local/share/fonts/"
        remote_src: true
      become: true
      become_user: "{{ username }}"

    - name: Check if 'VictorMono' exists
      ansible.builtin.shell: |
        ls {{ lookup('env', 'HOME') }}/.local/share/fonts/VictorMono*
      register: victor_font
      ignore_errors: true
      changed_when: victor_font.rc == 1

    - name: Download 'VictorMono' font if not exist
      when: victor_font is failed
      ansible.builtin.unarchive:
        src: https://rubjo.github.io/victor-mono/VictorMonoAll.zip
        dest: /tmp
        include:
          - 'TTF/VictorMono-Oblique.ttf'
          - 'TTF/VictorMono-MediumOblique.ttf'
          - 'TTF/VictorMono-BoldOblique.ttf'
        remote_src: true
      become: true
      become_user: "{{ username }}"

    - name: Ensure 'VictorMono' font is installed
      when: victor_font is failed
      ansible.builtin.shell: |
        cp /tmp/TTF/* {{ lookup('env', 'HOME') }}/.local/share/fonts
      become: true
      become_user: "{{ username }}"
      changed_when: victor_font.rc == 1

    - name: Add the flathub flatpak repository remote to the user installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

    # - name: Set DefaultLimitNOFILE to GUI session
    #   ansible.builtin.lineinfile:
    #     line: DefaultLimitNOFILE=524288:{{ nofile_limit }}
    #     path: "{{ item }}"
    #   loop:
    #     - /etc/systemd/system.conf
    #     - /etc/systemd/user.conf

    - name: Set soft `nofile` limits for '*'
      community.general.pam_limits:
        domain: "{{ item }}"
        limit_type: soft
        limit_item: nofile
        value: "{{ nofile_limit }}"
      loop:
        - "{{ username }}"

    - name: Set hard `nofile` limits for '*'
      community.general.pam_limits:
        domain: "{{ item }}"
        limit_type: hard
        limit_item: nofile
        value: "{{ nofile_limit }}"
      loop:
        - "{{ username }}"

    # The following ENVs are needed by OpenSSL for Rails to verify TLS properly
    # - name: Ensure $SSL_CERT_DIR
    #   ansible.builtin.lineinfile:
    #     path: /etc/profile
    #     line: SSL_CERT_DIR=/var/lib/ca-certificates/pem
    #
    # - name: Ensure $SSL_CERT_FILE
    #   ansible.builtin.lineinfile:
    #     path: /etc/profile
    #     line: SSL_CERT_FILE=/var/lib/ca-certificates/ca-bundle.pem
