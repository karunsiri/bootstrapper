# Run this to set up microk8s on an Ubuntu server
---
- name: Setting up Ubuntu host to run microk8s
  hosts: kubernetes
  become: true
  vars_files:
    - ../vars.yml
  vars:
    nofile_limit: 1048576
    vlan_subnet: "172.0.0.0/24"
    kubernetes_ip: "172.0.0.100"

  pre_tasks:
    - name: System Update
      apt:
        update_cache: true
        name: '*'
        state: latest
        cache_valid_time: 3600

  tasks:
    - name: Ensure essential packages are installed
      apt:
        name:
          - chrony
          - cron
          - net-tools
        state: present

    - name: Set soft `nofile` limits for '*'
      community.general.pam_limits:
        domain: "{{ item }}"
        limit_type: soft
        limit_item: nofile
        value: "{{ nofile_limit }}"
      loop:
        - '*'
        - root

    - name: Set hard `nofile` limits for '*'
      community.general.pam_limits:
        domain: "{{ item }}"
        limit_type: hard
        limit_item: nofile
        value: "{{ nofile_limit }}"
      loop:
        - '*'
        - root

    - name: Ensure pam_limits is enabled
      lineinfile:
        line: session required pam_limits.so
        path: /etc/pam.d/common-session

    - name: Set DefaultLimitNOFILE to GUI session
      ansible.builtin.lineinfile:
        line: DefaultLimitNOFILE=524288:{{ nofile_limit }}
        path: "{{ item }}"
      loop:
        - /etc/systemd/user.conf
        - /etc/systemd/system.conf

    - name: Set default timeout & abort sec
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        path: /etc/systemd/system.conf
      loop:
        - DefaultTimeoutStopSec=90s
        - DefaultTimeoutAbortSec=90s

    - name: Set Sysctl fs.file-max to unlimited
      lineinfile:
        line: "{{ item }}"
        path: /etc/sysctl.conf
      loop:
        - fs.file-max = 2097152
        - fs.inotify.max_user_instances = 2097152

    - name: Load sysctl config
      command:
        cmd: sysctl -p
      changed_when: false

    - name: Ensure chrony is running
      service:
        name: chronyd
        state: started
        enabled: yes

    - meta: reset_connection
