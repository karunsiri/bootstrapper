# Run this to set up microk8s on an Ubuntu server
---
- name: Setting up Ubuntu host to run k0s
  hosts: kubernetes
  become: true
  vars_files:
    - ../vars.yml
  vars:
    vlan_subnet: "172.0.0.0/24"
    kubernetes_ip: "172.0.0.100"
    kubernetes_domain: karunsiri.trueddns.com
    k0sctl_version: v0.17.5
    k0s_version: v1.29.3+k0s.0

  tasks:

    - name: Ensure kubernetes controller host name
      lineinfile:
        line: "{{ kubernetes_ip }}  {{ kubernetes_domain }}"
        path: /etc/hosts

    - name: Prepare /etc/kubernetes/audit
      file:
        state: directory
        path: /etc/kubernetes/audit
        mode: '0666'

    - name: Prepare k0s config directory
      register: k0s_path
      ansible.builtin.file:
        state: directory
        path: /etc/k0s
        mode: '0666'

    - name: Copy K8s audit policy to remote
      copy:
        src: ./files/k8s-audit-policy.yaml
        dest: /etc/kubernetes/audit/policy.yaml
        mode: '0660'

    - name: Check if k0sctl in installed
      ansible.builtin.shell: command -v k0sctl
      register: k0sctl_exe
      ignore_errors: true
      changed_when: false

    - name: Ensure k0sctl executable
      ansible.builtin.get_url:
        url: https://github.com/k0sproject/k0sctl/releases/download/{{ k0sctl_version }}/k0sctl-linux-x64
        dest: /usr/local/bin/k0sctl
        mode: '0755'

    - name: Copy k0sctl configuration
      register: k0sctl_conf
      ansible.builtin.copy:
        src: ./files/k0sctl_configuration.yaml
        dest: "{{ k0s_path.path }}/k0sctl_configuration.yaml"
        mode: '0660'

    - name: Copy k0s configuration
      register: k0s_conf
      ansible.builtin.copy:
        src: ./files/k0s_configuration.yaml
        dest: "{{ k0s_path.path }}/k0s_configuration.yaml"
        mode: '0660'

    - name: Collect service facts
      ansible.builtin.service_facts:

    - name: Initialize cluster with k0sctl
      when: ansible_facts.services['k0scontroller.service'] is undefined
      ansible.builtin.shell: |
        k0sctl apply -c {{ k0sctl_conf.path }}

    - meta: reset_connection
